apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-cfg
  namespace: monitoring
data:
  grafana.ini: |
    [server]
    protocol = http
    http_port = 3000
    domain = mon.home.local
    root_url = %(protocol)s://%(domain)s:%(http_port)s/grafana
    serve_from_sub_path = true

  datasources.yaml: |
    apiVersion: 1
    datasources:
    - access: proxy
      editable: true
      name: victoria-metrics
      uid: vm
      orgId: 1
      type: prometheus
      url: http://vmsingle-vm.monitoring.svc.cluster.local:8429/vm
      version: 1

    - access: proxy
      editable: true
      name: loki
      uid: loki
      orgId: 1
      type: loki
      url: http://loki-gateway.loki.svc
      version: 1
      editable: true
      jsonData:
        tracesToLogsV2:
          # Field with an internal link pointing to a logs data source in Grafana.
          # datasourceUid value must match the uid value of the logs data source.
          datasourceUid: 'loki'
          spanStartTimeShift: '1h'
          spanEndTimeShift: '-1h'
          tags: ['job', 'instance', 'pod', 'namespace']
          filterByTraceID: false
          filterBySpanID: false
          customQuery: true
          query: 'method="${__span.tags.method}"'
        tracesToMetrics:
          datasourceUid: 'vm'
          spanStartTimeShift: '1h'
          spanEndTimeShift: '-1h'
          tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
          queries:
            - name: 'Sample query'
              query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
        serviceMap:
          datasourceUid: 'vm'
        nodeGraph:
          enabled: true
        search:
          hide: false
        lokiSearch:
          datasourceUid: 'loki'
        traceQuery:
          timeShiftEnabled: true
          spanStartTimeShift: '1h'
          spanEndTimeShift: '-1h'
        spanBar:
          type: 'Tag'
          tag: 'http.path'


  dashboards.yaml: |-
    apiVersion: 1
    providers: 
      - name: victoria-metrics
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards
          foldersFromFilesStructure: true
        type: file
