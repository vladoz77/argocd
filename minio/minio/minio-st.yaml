apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: minio
  labels:
    app.kubernetes.io/name: minio
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
  serviceName: minio-headless
  replicas: 2
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: minio
                operator: In
                values:
                - "true"
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: minio
                topologyKey: kubernetes.io/hostname
              weight: 1
      securityContext:
        fsGroup: 1001
      initContainers:
        - name: fix-permission
          image: busybox:latest
          imagePullPolicy: "IfNotPresent"
          command:
            - sh
            - -c
            - |
                if [ ! -d /mnt/minio-disk-01 ]; then
                  mkdir /mnt/minio-disk-01
                  chown 1001:1001 /mnt/minio-disk-01
                fi
                if [ ! -d /mnt/minio-disk-02 ]; then
                  mkdir /mnt/minio-disk-02
                  chown 1001:1001 /mnt/minio-disk-02
                fi
          volumeMounts:
            - name: data-0
              mountPath: /mnt/minio-disk-01
            - name: data-1
              mountPath: /mnt/minio-disk-02
      containers:
        - name: minio
          image: docker.io/bitnami/minio:2024.7.13
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MINIO_DISTRIBUTED_MODE_ENABLED
              value: "yes"
            - name: MINIO_DISTRIBUTED_NODES
              value: "minio-{0...1}.minio-headless.minio.svc.cluster.local:9000/mnt/minio-disk-0{1...2}"
            - name: MINIO_SCHEME
              value: "http"
            - name: MINIO_FORCE_NEW_KEYS
              value: "no"
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: root-user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: root-password
            - name: MINIO_SKIP_CLIENT
              value: "yes"
            - name: MINIO_BROWSER
              value: "on"
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: "public"
            - name: MINIO_PROMETHEUS_URL
              value: http://vmselect.monitoring.svc.cluster.local:8481/select/0/prometheus
            - name: MINIO_PROMETHEUS_JOB_ID
              value: minio
          ports:
            - name: minio-api
              containerPort: 9000
              protocol: TCP
            - name: minio-console
              containerPort: 9001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: minio-api
              scheme: "HTTP"
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: minio-api
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: data-0
              mountPath: /mnt/minio-disk-01
            - name: data-1
              mountPath: /mnt/minio-disk-02
  volumeClaimTemplates:
    - metadata: 
        name: data-0
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: local-path
        resources:
          requests:
            storage: 10Gi
    - metadata: 
        name: data-1
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: local-path
        resources:
          requests:
            storage: 10Gi