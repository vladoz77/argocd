# Setting simple scalable deployment mode
deploymentMode: SimpleScalable

loki:
  useTestSchema: true
  config: |
    auth_enabled: false
    common:
      compactor_address: 'http://loki-backend:3100'
      path_prefix: /var/loki
      replication_factor: 3
      storage:
        s3:
          access_key_id: admin
          bucketnames: loki
          endpoint: minio.minio.svc.cluster.local:9000
          insecure: true
          s3forcepathstyle: true
          secret_access_key: password

    server:
      grpc_listen_port: 9095
      http_listen_port: 3100
      http_server_read_timeout: 600s
      http_server_write_timeout: 600s

    chunk_store_config:
      chunk_cache_config:
        memcached:
          batch_size: 256
          parallelism: 10
        memcached_client:
          addresses: 'dns+chunk-cache-memcached.loki.svc.cluster.local:11211'
    
    frontend:
      max_outstanding_per_tenant: 2048
    
    index_gateway:
      mode: simple
    
    ingester:
      chunk_encoding: snappy
      chunk_idle_period: 2h
      chunk_target_size: 1536000
      max_chunk_age: 2h
    
    limits_config:
      ingestion_burst_size_mb: 30
      ingestion_rate_mb: 20
      max_cache_freshness_per_query: 10m
      max_entries_limit_per_query: 100000
      max_query_parallelism: 8
      per_stream_rate_limit: 5MB
      per_stream_rate_limit_burst: 20MB
      query_timeout: 300s
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      split_queries_by_interval: 15m
      volume_enabled: true
    
    memberlist:
      join_members:
      - loki-memberlist
    
    pattern_ingester:
      enabled: true
    
    querier:
      engine:
        max_look_back_period: 300
      max_concurrent: 20
    
    query_range:
      parallelise_shardable_queries: false
      align_queries_with_step: true
      results_cache:
        cache:
          default_validity: 12h
          memcached_client:
            addresses: 'dns+result-cache-memcached.loki.svc.cluster.local:11211'
            timeout: 500ms
    
    query_scheduler:
      max_outstanding_requests_per_tenant: 2048
      grpc_client_config:
        max_send_msg_size: 33554432 
        max_recv_msg_size: 33554432
    
    ruler:
      alertmanager_url: http://vmalert-alertmanager.monitoring.svc.cluster.local:9093
      remote_write:
        clients:
          victoria-metrics:
            name: vm
            url: http://vmsingle.monitoring.svc.cluster.local:8428/api/v1/write
        enabled: true
      storage:
        local:
          directory: /etc/loki/rules
        type: local
      wal:
        dir: /var/loki/loki-wal
    
    runtime_config:
      file: /etc/loki/runtime-config/runtime-config.yaml
    
    schema_config:
      configs:
      - from: "2024-04-01"
        index:
          period: 24h
          prefix: loki_index_
        object_store: s3
        schema: v13
        store: tsdb
    
    storage_config:
      hedging:
        at: 250ms
        max_per_second: 20
        up_to: 3
      tsdb_shipper:
        index_gateway_client:
          server_address: dns+loki-backend-headless.loki.svc.cluster.local:9095
      index_queries_cache_config:
        memcached:
          batch_size: 100
          parallelism: 100
    
    tracing:
      enabled: false

# Configuration for the write
write:

  # Number of replicas for the write
  replicas: 3
  persistence:
    # -- Size of persistent disk
    size: 5Gi
    # -- Storage class to be used.
    storageClass: longhorn
  podAnnotations:
    # Prometheus scrape config
    prometheus.io/port: '3100'
    prometheus.io/scrape: 'true'
      

# Configuration for the read
read:
  # Number of replicas for the read
  replicas: 3
  persistence:
    # -- Size of persistent disk
    size: 5Gi
    # -- Storage class to be used.
    storageClass: longhorn
  podAnnotations:
    # Prometheus scrape config
    prometheus.io/port: '3100'
    prometheus.io/scrape: 'true'

# Configuration for the backend
backend:
  # Number of replicas for the backend
  replicas: 2
  persistence:
    # -- Size of persistent disk
    size: 5Gi
    # -- Storage class to be used.
    storageClass: longhorn
  podAnnotations:
    # Prometheus scrape config
    prometheus.io/port: '3100'
    prometheus.io/scrape: 'true'

  extraVolumeMounts: 
    - name: rules-volume
      mountPath: /etc/loki/rules/fake/loki-rules.yaml
      subPath: loki-rules.yaml
    - name: rules-volume
      mountPath: /etc/loki/rules/fake/loki-alert.yaml
      subPath: loki-alert.yaml
  extraVolumes: 
    - name: rules-volume
      configMap:
        name: loki-rules
    - name: alert-volume
      configMap:
        name: loki-alert

# Configuration for the gateway
gateway:
  # -- Specifies whether the gateway should be enabled
  enabled: true
  # -- Number of replicas for the gateway
  replicas: 1

# Disable chunk cache
chunksCache:
  enabled: false

# Disable result cache
resultsCache:
  enabled: false

# Disable mino installation
minio:
  enabled: false


# Disable self-monitoring
monitoring:
  selfMonitoring:
    enabled: false
    grafanaAgent:
      installOperator: false


# Disable helm-test
test:
  enabled: false

# Disable Loki-canary
lokiCanary:
  enabled: false