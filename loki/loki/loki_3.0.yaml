# Setting simple scalable deployment mode
deploymentMode: SimpleScalable

loki:
  # Disable multi-tenant support
  auth_enabled: false
  
  # Common config
  commonConfig:
    replication_factor: 3

  # Ingester config
  ingester:
    chunk_idle_period: 2h
    chunk_target_size: 1536000
    max_chunk_age: 2h
    chunk_encoding: snappy

  # limits config
  limits_config:
    max_cache_freshness_per_query: 10m
    max_query_parallelism: 8 
    reject_old_samples: true
    reject_old_samples_max_age: 168h
    split_queries_by_interval: 15m
    per_stream_rate_limit: 5MB
    per_stream_rate_limit_burst: 20MB
    ingestion_rate_mb: 20
    ingestion_burst_size_mb: 30
    max_entries_limit_per_query: 100000
    query_timeout: 300s

  
  # querier config
  querier:
    engine:
      max_look_back_period: 300
    max_concurrent: 16

  # query_scheduler config
  query_scheduler:
    max_outstanding_requests_per_tenant: 32768

  # ruler config
  rulerConfig:
    storage:
      type: local
      local:
        directory: /etc/loki/rules
    alertmanager_url: http://vmalert-alertmanager.monitoring.svc.cluster.local:9093
    wal:
      dir: /var/loki/loki-wal
    remote_write:
      enabled: true
      clients:
        victoria-metrics:
          name: vm
          url: http://vmsingle.monitoring.svc.cluster.local:8428/api/v1/write
  
  # S3 backend storage configuration
  storage:
    bucketNames:
      chunks: loki
    type: s3
    s3:
      endpoint: minio.minio.svc.cluster.local:9000
      secretAccessKey: password
      accessKeyId: admin
      s3ForcePathStyle: true
      insecure: true
      # http_config:
      #   idle_conn_timeout: 90s
      #   response_header_timeout: 0s
      #   insecure_skip_verify: false
  # Storage Schema
  schemaConfig:
    configs:
    - from: 2024-04-01
      store: tsdb
      index:
        prefix: loki_index_
        period: 24h
      object_store: s3
      schema: v13

# Configuration for the write
write:

  # Number of replicas for the write
  replicas: 3
  persistence:
    # -- Size of persistent disk
    size: 5Gi
    # -- Storage class to be used.
    storageClass: longhorn
  podAnnotations:
    # Prometheus scrape config
    prometheus.io/port: '3100'
    prometheus.io/scrape: 'true'
      

# Configuration for the read
read:
  # Number of replicas for the read
  replicas: 3
  persistence:
    # -- Size of persistent disk
    size: 5Gi
    # -- Storage class to be used.
    storageClass: longhorn
  podAnnotations:
    # Prometheus scrape config
    prometheus.io/port: '3100'
    prometheus.io/scrape: 'true'

# Configuration for the backend
backend:
  # Number of replicas for the backend
  replicas: 2
  persistence:
    # -- Size of persistent disk
    size: 5Gi
    # -- Storage class to be used.
    storageClass: longhorn
  podAnnotations:
    # Prometheus scrape config
    prometheus.io/port: '3100'
    prometheus.io/scrape: 'true'

  extraVolumeMounts: 
    - name: rules-volume
      mountPath: /etc/loki/rules/fake/loki-rules.yaml
      subPath: loki-rules.yaml
    - name: rules-volume
      mountPath: /etc/loki/rules/fake/loki-alert.yaml
      subPath: loki-alert.yaml
  extraVolumes: 
    - name: rules-volume
      configMap:
        name: loki-rules
    - name: alert-volume
      configMap:
        name: loki-alert

# Configuration for the gateway
gateway:
  # -- Specifies whether the gateway should be enabled
  enabled: true
  # -- Number of replicas for the gateway
  replicas: 1

# Disable chunk cache
chunksCache:
  enabled: false

# Disable result cache
resultsCache:
  enabled: false

# Disable mino installation
minio:
  enabled: false


# Disable self-monitoring
monitoring:
  selfMonitoring:
    enabled: false
    grafanaAgent:
      installOperator: false


# Disable helm-test
test:
  enabled: false

# Disable Loki-canary
lokiCanary:
  enabled: false