---
# Source: victoria-metrics-agent/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vmagent
  namespace: monitoring
  labels:
    app.kubernetes.io/name: vmagent
    app.kubernetes.io/version: "v1.96.0"
    
---
# Source: victoria-metrics-agent/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: vmagent-config
  namespace: monitoring
  labels:
    app.kubernetes.io/name: vmagent
    app.kubernetes.io/version: "v1.96.0"
data:
  scrape.yml: |
    global:
      scrape_interval: 10s
    
    scrape_configs:
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: apiserver
      kubernetes_sd_configs:
      - namespaces:
          names:
          - default
        role: endpoints
      relabel_configs:
      - action: keep
        regex: apiserver
        source_labels:
        - __meta_kubernetes_service_label_component
      - action: keep
        regex: https
        source_labels:
        - __meta_kubernetes_endpoint_port_name
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: node
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - source_labels:
        - __meta_kubernetes_service_name
        target_label: service
      - source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - replacement: https
        target_label: endpoint
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubelet
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      - source_labels:
        - __meta_kubernetes_node_name
        target_label: node
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      honor_timestamps: false
      job_name: cadvisor
      kubernetes_sd_configs:
      - role: node
      metric_relabel_configs:
      - action: drop
        regex: container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)
        source_labels:
        - __name__
      - action: drop
        regex: container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)
        source_labels:
        - __name__
      - action: drop
        regex: container_memory_(mapped_file|swap)
        source_labels:
        - __name__
      - action: drop
        regex: container_(file_descriptors|tasks_state|threads_max)
        source_labels:
        - __name__
      - action: drop
        regex: container_spec.*
        source_labels:
        - __name__
      - action: drop
        regex: .+;
        source_labels:
        - id
        - pod
      relabel_configs:
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      - replacement: cadvisor
        target_label: job
      - source_labels:
        - __meta_kubernetes_node_name
        target_label: node
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - honor_labels: true
      job_name: kube-proxy
      kubernetes_sd_configs:
      - namespaces:
          names:
          - kube-system
        role: pod
      relabel_configs:
      - action: keep
        regex: kube-proxy.+
        source_labels:
        - __meta_kubernetes_pod_name
      - action: replace
        regex: (.+?)(\\:\\d+)?
        replacement: $1:10249
        source_labels:
        - __address__
        target_label: __address__
      - source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: node
      - source_labels:
        - __meta_kubernetes_pod_label_app
        target_label: job
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      honor_labels: true
      job_name: kube-controller-manager
      kubernetes_sd_configs:
      - namespaces:
          names:
          - kube-system
        role: pod
      relabel_configs:
      - action: keep
        regex: kube-controller-manager.+
        source_labels:
        - __meta_kubernetes_pod_name
      - action: replace
        regex: (.+?)(\\:\\d+)?
        replacement: $1:10257
        source_labels:
        - __address__
        target_label: __address__
      - source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: node
      - source_labels:
        - __meta_kubernetes_pod_label_app
        target_label: job
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      honor_labels: true
      job_name: kube-scheduler
      kubernetes_sd_configs:
      - namespaces:
          names:
          - kube-system
        role: pod
      relabel_configs:
      - action: keep
        regex: kube-scheduler.+
        source_labels:
        - __meta_kubernetes_pod_name
      - action: replace
        regex: (.+?)(\\:\\d+)?
        replacement: $1:10259
        source_labels:
        - __address__
        target_label: __address__
      - source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: node
      - source_labels:
        - __meta_kubernetes_pod_label_app
        target_label: job
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - honor_labels: true
      job_name: node-exporter
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: monitoring;node-exporter-service;http-metrics
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_service_name
        - __meta_kubernetes_endpoint_port_name
      - source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - source_labels:
        - __meta_kubernetes_service_name
        target_label: job
      - source_labels:
        - __meta_kubernetes_endpoint_node_name
        target_label: node
    - honor_labels: true
      job_name: kube-state-metrics
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: monitoring;kube-state-metrics;http-metrics
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_service_name
        - __meta_kubernetes_endpoint_port_name
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: node
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - source_labels:
        - __meta_kubernetes_service_name
        target_label: job
    - honor_labels: true
      job_name: istio
      kubernetes_sd_configs:
      - namespaces:
          names:
          - istio-system
        role: endpoints
      relabel_configs:
      - action: keep
        regex: pilot
        source_labels:
        - __meta_kubernetes_service_label_istio
      - action: keep
        regex: http-monitoring
        source_labels:
        - __meta_kubernetes_endpoint_port_name
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: node
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - source_labels:
        - __meta_kubernetes_service_name
        target_label: job
    - honor_labels: true
      job_name: istio-proxy
      kubernetes_sd_configs:
      - role: pod
      metrics_path: /stats/prometheus
      relabel_configs:
      - action: keep
        regex: istio-proxy
        source_labels:
        - __meta_kubernetes_pod_container_name
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        target_label: __address__
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod_name
    - honor_labels: true
      job_name: Calico
      kubernetes_sd_configs:
      - namespaces:
          names:
          - calico-system
        role: endpoints
      relabel_configs:
      - action: keep
        regex:
        - calico-kube-controllers
        - calico-typha
        - calico-felix
        source_labels:
        - __meta_kubernetes_service_label_k8s_app
      - action: keep
        regex: metrics-port
        source_labels:
        - __meta_kubernetes_endpoint_port_name
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: node
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - source_labels:
        - __meta_kubernetes_service_name
        target_label: job
    - job_name: kubernetes-endpoints
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: drop
        regex: "true"
        source_labels:
        - __meta_kubernetes_pod_container_init
      - action: keep_if_equal
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_port
        - __meta_kubernetes_pod_container_port_number
      - action: keep
        regex: "true"
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scrape
      - action: replace
        regex: (https?)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scheme
        target_label: __scheme__
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_service_annotation_prometheus_io_port
        target_label: __address__
      - source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: node
      - source_labels:
        - __meta_kubernetes_service_name
        target_label: job
    - job_name: kubernetes-pods
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: drop
        regex: true
        source_labels:
        - __meta_kubernetes_pod_container_init
      - action: keep_if_equal
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        - __meta_kubernetes_pod_container_port_number
      - action: replace
        regex: (https?)
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scheme
        target_label: __scheme__
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        target_label: __address__
      - source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: node
      - source_labels:
        - __meta_kubernetes_service_name
        target_label: job
---
# Source: victoria-metrics-agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vmagent-clusterrole
  namespace: monitoring
  labels:
    app.kubernetes.io/name: vmagent
    app.kubernetes.io/version: "v1.96.0"
rules:
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
# Source: victoria-metrics-agent/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vmagent-clusterrolebinding
  namespace: monitoring
  labels:
    app.kubernetes.io/name: vmagent
    app.kubernetes.io/version: "v1.96.0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vmagent-clusterrole
subjects:
  - kind: ServiceAccount
    name: vmagent
    namespace: monitoring
---
# Source: victoria-metrics-agent/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8429"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/name: vmagent
    app.kubernetes.io/version: "v1.96.0"
  name: vmagent
  namespace: monitoring
spec:
  ports:
    - name: http
      port: 8429
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: vmagent
  type: "ClusterIP"
---
# Source: victoria-metrics-agent/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vmagent
  namespace: monitoring
  labels:
    app.kubernetes.io/name: vmagent
    app.kubernetes.io/version: "v1.96.0"
spec:
  replicas: 1
  serviceName: vmagent
  selector:
    matchLabels:
      app.kubernetes.io/name: vmagent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vmagent
    spec:
      serviceAccountName: vmagent
      containers:
        - name: victoria-metrics-agent
          image: "victoriametrics/vmagent:v1.96.0"
          workingDir: /
          args:
            - -promscrape.config=/config/scrape.yml
            - -remoteWrite.tmpDataPath=/tmpData
            - -remoteWrite.url=http://vmsingle.monitoring-test.svc.cluster.local:8428/api/v1/write
            - -envflag.enable=true
            - -envflag.prefix=VM_
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8429
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 15
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 5
          volumeMounts:
            - name: tmpdata
              mountPath: /tmpData
            - name: config
              mountPath: /config
          resources:
            {}
      volumes:
        - name: config
          configMap:
            name: vmagent-config
  volumeClaimTemplates:
  - metadata:
      name: tmpdata
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: "10Gi"
