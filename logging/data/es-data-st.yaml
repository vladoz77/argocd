apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: es-data
  labels:
    app: "es-data"
spec:
  serviceName: es-data-headless
  selector:
    matchLabels:
      app: "es-data"
  replicas: 1
  podManagementPolicy: Parallel
  template:
    metadata:
      name: "es-data"
      labels:
        app: "es-data"
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #         - key: app
      #           operator: In
      #           values:
      #           - "es-data"
      #       topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 120
      initContainers:
      - name: configure-sysctl
        securityContext:
          runAsUser: 0
          privileged: true
        image: "elasticsearch:7.17.5"
        imagePullPolicy: "IfNotPresent"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        resources: {}

      containers:
      - name: "elasticsearch"
        image: "elasticsearch:8.5.1"
        imagePullPolicy: "IfNotPresent"
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300

        resources:
          limits: {}
          requests: {}

        env:
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: node.roles
          value: "data"
        - name: discovery.seed_hosts
          value: "es-client-headless,es-master-headless,es-data-headless"
        - name: cluster.name
          value: "es"
        - name: network.host
          value: "0.0.0.0"
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: es-credentials
        - name: xpack.security.enabled
          value: "true"
        - name: xpack.security.transport.ssl.enabled
          value: "true"
        - name: xpack.security.http.ssl.enabled
          value: "true"
        - name: xpack.security.transport.ssl.verification_mode
          value: certificate
        - name: xpack.security.transport.ssl.key
          value: /usr/share/elasticsearch/config/certs/tls.key
        - name: xpack.security.transport.ssl.certificate
          value: /usr/share/elasticsearch/config/certs/tls.crt
        - name: xpack.security.transport.ssl.certificate_authorities
          value: /usr/share/elasticsearch/config/certs/ca.crt
        - name: xpack.security.http.ssl.key
          value: /usr/share/elasticsearch/config/certs/tls.key
        - name: xpack.security.http.ssl.certificate
          value: /usr/share/elasticsearch/config/certs/tls.crt
        - name: xpack.security.http.ssl.certificate_authorities
          value: /usr/share/elasticsearch/config/certs/ca.crt

        volumeMounts:
        - name: "es-data"
          mountPath: /usr/share/elasticsearch/data
        - name: elastic-certificates
          mountPath: /usr/share/elasticsearch/config/certs

      volumes:
      - name: elastic-certificates
        secret:
          secretName: es-certs

  volumeClaimTemplates:
  - metadata:
      name: es-data
    spec:
      storageClassName: standard
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
